--- template/app/src/payment/PricingPage.tsx
+++ opensaas-sh/app/src/payment/PricingPage.tsx
@@ -4,12 +4,11 @@
 import { useAuth } from 'wasp/client/auth';
 import { generateCheckoutSession, getCustomerPortalUrl, useQuery } from 'wasp/client/operations';
 import { cn } from '../client/cn';
-import { Alert, AlertDescription } from '../components/ui/alert';
-import { Button } from '../components/ui/button';
-import { Card, CardContent, CardTitle } from '../components/ui/card';
+import { CardContent, CardTitle } from '../components/ui/card';
 import { PaymentPlanId, paymentPlans, prettyPaymentPlanName, SubscriptionStatus } from './plans';
 
 const bestDealPaymentPlanId: PaymentPlanId = PaymentPlanId.Pro;
+const PaymentsDocsURL = 'https://docs.opensaas.sh/guides/payments-integration/';
 
 interface PaymentPlanCard {
   name: string;
@@ -97,105 +96,113 @@
       return;
     }
 
-    window.open(customerPortalUrl, '_blank');
+    window.open(customerPortalUrl, '_self');
   };
 
   return (
     <div className='py-10 lg:mt-10'>
       <div className='mx-auto max-w-7xl px-6 lg:px-8'>
-        <div id='pricing' className='mx-auto max-w-4xl text-center'>
+        <div className='mx-auto max-w-4xl text-center'>
           <h2 className='mt-2 text-4xl font-bold tracking-tight text-foreground sm:text-5xl'>
-            Pick your <span className='text-primary'>pricing</span>
+            <span className='text-primary'>Simple</span> pricing
           </h2>
         </div>
         <p className='mx-auto mt-6 max-w-2xl text-center text-lg leading-8 text-muted-foreground'>
-          Choose between Stripe and LemonSqueezy as your payment provider. Just add your Product IDs! Try it
-          out below with test credit card number <br />
-          <span className='px-2 py-1 bg-muted rounded-md text-muted-foreground font-mono text-sm'>
-            4242 4242 4242 4242 4242
-          </span>
+          Choose the plan that's right for you. All plans include our core features.
         </p>
-        {errorMessage && (
-          <Alert variant='destructive' className='mt-8'>
-            <AlertDescription>{errorMessage}</AlertDescription>
-          </Alert>
-        )}
-        <div className='isolate mx-auto mt-16 grid max-w-md grid-cols-1 gap-y-8 lg:gap-x-8 sm:mt-20 lg:mx-0 lg:max-w-none lg:grid-cols-3'>
-          {Object.values(PaymentPlanId).map((planId) => (
-            <Card
-              key={planId}
-              className={cn(
-                'relative flex flex-col grow justify-between overflow-hidden transition-all duration-300 hover:shadow-lg',
-                {
-                  'ring-2 ring-primary !bg-transparent': planId === bestDealPaymentPlanId,
-                  'ring-1 ring-border lg:mt-8': planId !== bestDealPaymentPlanId,
-                }
-              )}
-            >
-              {planId === bestDealPaymentPlanId && (
-                <div
-                  className='absolute top-0 right-0 -z-10 w-full h-full transform-gpu blur-3xl'
-                  aria-hidden='true'
-                >
-                  <div
-                    className='absolute w-full h-full bg-gradient-to-br from-primary/40 via-primary/20 to-primary/10 opacity-30'
-                    style={{
-                      clipPath: 'circle(670% at 50% 50%)',
-                    }}
-                  />
-                </div>
-              )}
-              <CardContent className='p-8 xl:p-10'>
-                <div className='mb-8'>
-                  <div className='flex items-center justify-between gap-x-4'>
-                    <CardTitle id={planId} className='text-foreground text-lg font-semibold leading-8'>
-                      {paymentPlanCards[planId].name}
-                    </CardTitle>
+        <div className='mx-auto mt-16 grid max-w-lg grid-cols-1 gap-y-6 sm:mt-20 sm:max-w-none sm:grid-cols-3'>
+          {Object.entries(paymentPlanCards).map(([planId, plan]) => {
+            const typedPlanId = planId as PaymentPlanId;
+            return (
+              <div
+                key={planId}
+                className={cn(
+                  'relative flex flex-col grow justify-between rounded-3xl ring-gray-900/10 dark:ring-gray-100/10 overflow-hidden p-8 xl:p-10',
+                  {
+                    'ring-2 ring-primary !bg-transparent': typedPlanId === bestDealPaymentPlanId,
+                    'ring-1 ring-border lg:mt-8': typedPlanId !== bestDealPaymentPlanId,
+                  }
+                )}
+              >
+                {typedPlanId === bestDealPaymentPlanId && (
+                  <div className='absolute inset-0'>
+                    <div
+                      className='absolute w-full h-full bg-gradient-to-br from-primary/40 via-primary/20 to-primary/10 opacity-30'
+                      style={{
+                        clipPath: 'circle(670% at 50% 50%)',
+                      }}
+                    />
                   </div>
-                  <p className='mt-4 text-sm leading-6 text-muted-foreground'>
-                    {paymentPlanCards[planId].description}
-                  </p>
-                  <p className='mt-6 flex items-baseline gap-x-1'>
-                    <span className='text-4xl font-bold tracking-tight text-foreground'>
-                      {paymentPlanCards[planId].price}
-                    </span>
-                    <span className='text-sm font-semibold leading-6 text-muted-foreground'>
-                      {paymentPlans[planId].effect.kind === 'subscription' && '/month'}
-                    </span>
-                  </p>
-                  <ul role='list' className='mt-8 space-y-3 text-sm leading-6 text-muted-foreground'>
-                    {paymentPlanCards[planId].features.map((feature) => (
-                      <li key={feature} className='flex gap-x-3'>
-                        <CheckCircle className='h-5 w-5 flex-none text-primary' aria-hidden='true' />
-                        {feature}
-                      </li>
-                    ))}
-                  </ul>
-                </div>
-                {isUserSubscribed ? (
-                  <Button
-                    onClick={handleCustomerPortalClick}
-                    disabled={isCustomerPortalUrlLoading}
-                    aria-describedby='manage-subscription'
-                    variant={planId === bestDealPaymentPlanId ? 'default' : 'outline'}
-                    className='w-full'
-                  >
-                    Manage Subscription
-                  </Button>
-                ) : (
-                  <Button
-                    onClick={() => handleBuyNowClick(planId)}
-                    aria-describedby={planId}
-                    variant={planId === bestDealPaymentPlanId ? 'default' : 'outline'}
-                    className='w-full'
-                    disabled={isPaymentLoading}
-                  >
-                    {!!user ? 'Buy plan' : 'Log in to buy plan'}
-                  </Button>
                 )}
-              </CardContent>
-            </Card>
-          ))}
+                <CardContent className='p-8 xl:p-10'>
+                  <div className='mb-8'>
+                    <div className='flex items-center justify-between gap-x-4'>
+                      <CardTitle id={planId} className='text-foreground text-lg font-semibold leading-8'>
+                        {paymentPlanCards[typedPlanId].name}
+                      </CardTitle>
+                    </div>
+                    <p className='mt-4 text-sm leading-6 text-muted-foreground'>
+                      {paymentPlanCards[typedPlanId].description}
+                    </p>
+                    <p className='mt-6 flex items-baseline gap-x-1'>
+                      <span className='text-4xl font-bold tracking-tight text-foreground'>
+                        {paymentPlanCards[typedPlanId].price}
+                      </span>
+                      <span className='text-sm font-semibold leading-6 text-muted-foreground'>
+                        {paymentPlans[typedPlanId].effect.kind === 'subscription' && '/month'}
+                      </span>
+                    </p>
+                    <ul role='list' className='mt-8 space-y-3 text-sm leading-6 text-muted-foreground'>
+                      {paymentPlanCards[typedPlanId].features.map((feature: string) => (
+                        <li key={feature} className='flex gap-x-3'>
+                          <CheckCircle className='h-5 w-5 flex-none text-primary' aria-hidden='true' />
+                          {feature}
+                        </li>
+                      ))}
+                    </ul>
+                  </div>
+                  {isUserSubscribed ? (
+                    <button
+                      onClick={handleCustomerPortalClick}
+                      disabled={isCustomerPortalUrlLoading}
+                      aria-describedby='manage-subscription'
+                      className={cn(
+                        'mt-8 block rounded-md py-2 px-3 text-center text-sm font-semibold leading-6 focus-visible:outline focus-visible:outline-2 focus-visible:outline-yellow-400',
+                        {
+                          'bg-yellow-500 text-white hover:text-white shadow-sm hover:bg-yellow-400':
+                            typedPlanId === bestDealPaymentPlanId,
+                          'text-gray-600 ring-1 ring-inset ring-purple-200 hover:ring-purple-400':
+                            typedPlanId !== bestDealPaymentPlanId,
+                        }
+                      )}
+                    >
+                      Manage Subscription
+                    </button>
+                  ) : (
+                    <button
+                      onClick={() => handleBuyNowClick(typedPlanId)}
+                      aria-describedby={planId}
+                      className={cn(
+                        {
+                          'bg-yellow-500 text-white hover:text-white shadow-sm hover:bg-yellow-400':
+                            typedPlanId === bestDealPaymentPlanId,
+                          'text-gray-600  ring-1 ring-inset ring-purple-200 hover:ring-purple-400':
+                            typedPlanId !== bestDealPaymentPlanId,
+                        },
+                        {
+                          'opacity-50 cursor-wait': isPaymentLoading,
+                        },
+                        'mt-8 block rounded-md py-2 px-3 text-center text-sm dark:text-white font-semibold leading-6 focus-visible:outline focus-visible:outline-2 focus-visible:outline-yellow-400'
+                      )}
+                      disabled={isPaymentLoading}
+                    >
+                      {!!user ? 'Buy Plan' : 'Log in to buy plan'}
+                    </button>
+                  )}
+                </CardContent>
+              </div>
+            );
+          })}
         </div>
       </div>
     </div>
