--- template/app/src/file-upload/operations.ts
+++ opensaas-sh/app/src/file-upload/operations.ts
@@ -6,7 +6,8 @@
   type DeleteFile,
   type GetAllFilesByUser,
   type GetDownloadFileSignedURL,
-} from "wasp/server/operations";
+} from 'wasp/server/operations';
+import { checkIfUserHasReachedFileUploadLimit } from './fileUploading';
 
 import * as z from "zod";
 import { ensureArgsSchemaOrThrowHttpError } from "../server/validation";
@@ -37,11 +38,16 @@
     throw new HttpError(401);
   }
 
-  const { fileType, fileName } = ensureArgsSchemaOrThrowHttpError(
-    createFileInputSchema,
-    rawArgs,
-  );
+  const userFileLimitReached = await checkIfUserHasReachedFileUploadLimit({
+    userId: context.user.id,
+    prismaFileDelegate: context.entities.File,
+  });
+  if (userFileLimitReached) {
+    throw new HttpError(403, 'This demo only allows 2 file uploads per user.');
+  }
 
+  const { fileType, fileName } = ensureArgsSchemaOrThrowHttpError(createFileInputSchema, rawArgs);
+
   return await getUploadFileSignedURLFromS3({
     fileType,
     fileName,
